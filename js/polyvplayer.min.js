if (typeof(polyvObject) == 'undefined') {
	var polyvObject = {};
	var android_default_mp4=false;
	var useM3u8=false;
	polyvObject.players = [];

	polyvObject.thisMovie = function(movieName) { 
		if (navigator.appName.indexOf("Microsoft") != -1) { 
			return window[movieName] 
		} else { 
			return document[movieName] 
		} 
	} 
	polyvObject.getVideo = function(vid){
		if(useM3u8){
			return "http://v.polyv.net/hls/" + vid + ".m3u8";
		}else{
			return "http://v.polyv.net/uc/video/getMp4?vid=" + vid;
		}
	}
	polyvObject.isDomReady = function() {
		var d = document;
		if (d && d.getElementsByTagName && d.getElementById && d.body && polyvObject.players.length) {
			clearInterval(polyvObject.domTimer);
			for (var i = 0; i < polyvObject.players.length; i++) {
				polyvObject.writePlayer(i);
			}
			polyvObject.domDone = true;
		}
	};

	polyvObject.writePlayer = function(idx) {
		var container = document.getElementById(polyvObject.players[idx].container);
		if(!container) return;
		if (navigator.userAgent.match(/iP(od|hone|ad)/i) || navigator.userAgent.match(/Windows Phone/i)) {
			//if(!polyvObject.hasFlash()){
			var source = polyvObject.players[idx].source;
			var vidRexp = new RegExp();
			vidRexp.compile(/(.*)\/videos\/([0-9a-zA-Z_-]*).swf/i);
			if (vidRexp.test(source)) {
				var results = vidRexp.exec(source);
				var vid = results[2];

				var urlstr = polyvObject.getVideo(vid);

				var video = document.createElement("video");
				video.src = urlstr;
				video.controls = "controls";
				video.addEventListener('play', function(){
					try{s2j_onPlayStart();}catch(e){}
				}, false);
				var watchendtime = polyvObject.players[idx].watchendtime;
				if (watchendtime) {
					video.addEventListener('progress', function(event){
						if (event.target.currentTime >= watchendtime) {
							event.target.currentTime = 0;
							event.target.pause();
							s2j_onPlayOver();
						}
					}, false);
				}
				if (navigator.userAgent.match(/WebKit/i)) {
					video.onclick = "this.play();";
				}
				video.width = polyvObject.players[idx].width;
				video.height = polyvObject.players[idx].height;
				container.appendChild(video);
			}
		
		} else if (navigator.userAgent.match(/Android/i)) {
			if (polyvObject.hasFlash() && !android_default_mp4) {
				document.getElementById(polyvObject.players[idx].container).innerHTML = polyvObject.players[idx].getHtml() + '';
			}else{
				var source = polyvObject.players[idx].source;
				var vidRexp = new RegExp();
				vidRexp.compile(/(.*).polyv.net\/videos\/([0-9a-zA-Z_-]*).swf/i);
				if (vidRexp.test(source)) {

					
					if (!!document.createElement('video').canPlayType) {
						var results = vidRexp.exec(source);
						var vid = results[2];

						var urlstr = polyvObject.getVideo(vid);

						var div1 = document.getElementById(polyvObject.players[idx].container);
						var video = document.createElement("video");
						video.src = urlstr;
						video.controls = "controls";
						if (navigator.userAgent.match(/WebKit/i)) {
							video.onclick = "this.play();";
						}
						video.width = polyvObject.players[idx].width;
						video.height = polyvObject.players[idx].height;
						div1.appendChild(video);
					}else{
						var results = vidRexp.exec(source);
						var vid = results[2];

						var urlstr = polyvObject.getVideo(vid);

						var div1 = document.getElementById(polyvObject.players[idx].container);
						var divvideo = document.createElement("div");
						divvideo.style.display = "inline-block";
						divvideo.style.width = polyvObject.players[idx].width + "px";
						divvideo.style.height = polyvObject.players[idx].height + "px";
						divvideo.style.background = 'url("http://static.polyv.net/file/images/ivideo.png") no-repeat center center #000';
						divvideo.innerHTML = '<a href="' + urlstr + '" style="display:inline-block;width:100%;height:100%;">abc</a>';
						div1.appendChild(divvideo);
						
					}
				}
			}
			
			

		} else if(polyvObject.hasFlash()){
			container.innerHTML = polyvObject.players[idx].getHtml() + '';
		}else{
			container.innerHTML = "<a href=\"http://get.adobe.com/flashplayer/\">You need to install adobe flashplayer first.</a>";
		}
	};

	polyvObject.hasFlash = function() {
		var version = '0,0,0,0';
		try {
			try {
				var axo = new ActiveXObject('ShockwaveFlash.ShockwaveFlash.6');
				try {
					axo.AllowScriptAccess = 'always';
				} catch(e) {
					version = '6,0,0';
				}
			} catch(e) {}
			version = new ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$' + 'version').replace(/\D+/g, ',').match(/^,?(.+),?$/)[1];
		} catch(e) {
			try {
				if (navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin) {
					version = (navigator.plugins['Shockwave Flash 2.0'] || navigator.plugins['Shockwave Flash']).description.replace(/\D+/g, ",").match(/^,?(.+),?$/)[1];
				}
			} catch(e) {}
		}
		var major = parseInt(version.split(',')[0], 10);
		var minor = parseInt(version.split(',')[2], 10);
		if (major > 9 || (major == 9 && minor > 97)) {
			return true;
		} else {
			return false;
		}
	};

	polyvObject.swf = function(src, id, width, height, bgcolor, watchendtime) {
		if (!document.getElementById) {
			return;
		}
		this.source = src;
		this.id = id + '_swf';
		this.container = id + '_div';
		this.width = width;
		this.height = height;
		this.watchendtime = watchendtime;
		this.flashvars = {
			id: this.id
		};
		this.params = {
			'bgcolor': bgcolor,
			'allowfullscreen': 'true',
			'allowscriptaccess': 'always',
			'wmode':'opaque'
		};
		polyvObject.players.push(this);
	};

	polyvObject.swf.prototype = {
		getHtml: function() {
			var html = "";
			var fv = this.getVariables();
			html = '<object id="' + this.id + '" name="' + this.id + '" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="' + this.width + '" height="' + this.height + '">';
			html += '<param name="movie" value="' + this.source + '" />';
			for (var key in this.params) {
				html += '<param name="' + key + '" value="' + this.params[key] + '" />';
			}
			html += '<param name="flashvars" value="' + fv + '" />';
			html += '<embed type="application/x-shockwave-flash" src="' + this.source + '" width="' + this.width + '" height="' + this.height + '"';
			html += ' id="' + this.id + '" name="' + this.id + '" ';
			for (var key in this.params) {
				html += [key] + '="' + this.params[key] + '" ';
			}
			html += 'flashvars="' + fv + '" />';
			html += "</object>";
			return html;
		},
		addVariable: function(name, value) {
			this.flashvars[name] = encodeURIComponent(decodeURIComponent(value));
		},
		getVariables: function() {
			var pairs = new Array();
			if (this.watchendtime) {
				pairs[0] = "watchEndTime=" + this.watchendtime;
			}
			for (var key in this.flashvars) {
				pairs[pairs.length] = key + "=" + this.flashvars[key];
			}
			return pairs.join('&');
		},
		play: function() {
			var object = document.getElementById(this.container).childNodes[0];
			try {
				polyvObject.thisMovie(object.id).j2s_resumeVideo();
			} catch(e) {
				object.play();
			}
		},
		play: function() {
			var object = document.getElementById(this.container).childNodes[0];
			try {
				polyvObject.thisMovie(object.id).j2s_resumeVideo();
			} catch(e) {
				object.play();
			}
		},
		j2s_getCurrentTime: function() {
			var object = document.getElementById(this.container).childNodes[0];
			try {
				return polyvObject.thisMovie(object.id).j2s_getCurrentTime();
			} catch(e) {
				return 0;
			}
		}
	};
	//if (polyvObject.hasFlash() || navigator.userAgent.match(/iP(od|hone|ad)/i) || navigator.userAgent.match(/Android/i)) {
		polyvObject.domTimer = setInterval(polyvObject.isDomReady, 50);
	//}
}